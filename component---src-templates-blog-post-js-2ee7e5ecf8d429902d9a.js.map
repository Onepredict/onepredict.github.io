{"version":3,"file":"component---src-templates-blog-post-js-2ee7e5ecf8d429902d9a.js","mappings":"qOAMA,MA4FaA,EAAOC,IAAwC,IAArCC,MAAQC,eAAgBC,IAAQH,EACrD,OACEI,EAAAA,cAACC,EAAAA,EAAG,CACFC,MAAOH,EAAKI,YAAYD,MACxBE,YAAaL,EAAKI,YAAYC,aAAeL,EAAKM,QAClDC,KAAMP,EAAKQ,OAAOD,MAClB,EAIN,UAtGyBE,IAGnB,IAAAC,EAAA,IAFJZ,MAAM,SAAEa,EAAQ,KAAEC,EAAI,KAAEC,EAAMd,eAAgBC,GAAM,SACpDc,GACDL,EACC,MAAMM,GAA6B,QAAjBL,EAAAG,EAAKG,oBAAY,IAAAN,OAAA,EAAjBA,EAAmBP,QAAU,QACzCc,EAASjB,EAAKI,YAAYa,QAAU,CAAC,EAE3C,OACEhB,EAAAA,cAACiB,EAAAA,EAAM,CAACJ,SAAUA,EAAUX,MAAOY,GACjCd,EAAAA,cAAA,WACEkB,UAAU,YACVC,WAAS,EACTC,SAAS,6BAETpB,EAAAA,cAAA,cACEA,EAAAA,cAAA,MAAIqB,SAAS,YAAYtB,EAAKI,YAAYD,OAC1CF,EAAAA,cAAA,WACGgB,EAAOM,QACNtB,EAAAA,cAAA,OAAKuB,IAAKP,EAAOM,OAAQE,IAAI,GAAGN,UAAU,WAE5ClB,EAAAA,cAAA,WACEA,EAAAA,cAAA,OAAKkB,UAAU,UACZF,EAAOS,KACP,IAAI,IAEJ,IACAT,EAAOU,UAEV1B,EAAAA,cAAA,OAAKkB,UAAU,QACZnB,EAAKI,YAAYwB,SAK1B3B,EAAAA,cAAA,WACE4B,wBAAyB,CAAEC,OAAQ9B,EAAK+B,MACxCT,SAAS,gBAEXrB,EAAAA,cAAA,OAAKkB,UAAU,WAAU,uCAEtB,IACDlB,EAAAA,cAAA,SAAG,MAAM,aAAUA,EAAAA,cAAA,WAAM,UAExB,IACDA,EAAAA,cAAA,KACE+B,KAAK,8BACLC,OAAO,SACPC,IAAI,cACL,UAAU,eAGfjC,EAAAA,cAAA,OAAKkB,UAAU,iBACblB,EAAAA,cAAA,MACEkC,MAAO,CACLC,QAAU,OACVC,SAAW,OACXC,eAAiB,gBACjBC,UAAY,OACZC,QAAS,IAGXvC,EAAAA,cAAA,UACGU,GACCV,EAAAA,cAACwC,EAAAA,KAAI,CAACC,GAAI/B,EAASH,OAAOD,KAAM2B,IAAI,QAAO,KACtCvB,EAASP,YAAYD,QAI9BF,EAAAA,cAAA,UACGW,GACCX,EAAAA,cAACwC,EAAAA,KAAI,CAACC,GAAI9B,EAAKJ,OAAOD,KAAM2B,IAAI,QAC7BtB,EAAKR,YAAYD,MAAM,SAMlCF,EAAAA,cAAA,OAAKkB,UAAW,oBACdlB,EAAAA,cAACwC,EAAAA,KAAI,CACHC,GAAG,IACHP,MAAO,CACLQ,mBAAoB,OACpBC,MAAO,UAGT3C,EAAAA,cAAA,OAAKkB,UAAW,oBAAoB,eAGjC,C","sources":["webpack://onepredict-engineering-blog/./src/templates/blog-post.js"],"sourcesContent":["import * as React from \"react\";\nimport { Link, graphql } from \"gatsby\";\n\nimport Layout from \"../components/layout\";\nimport Seo from \"../components/seo\";\n\nconst BlogPostTemplate = ({\n  data: { previous, next, site, markdownRemark: post },\n  location,\n}) => {\n  const siteTitle = site.siteMetadata?.title || `Title`;\n  const author = post.frontmatter.author || {};\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <article\n        className=\"blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\n          <div>\n            {author.avatar && (\n              <img src={author.avatar} alt=\"\" className=\"avatar\" />\n            )}\n            <div>\n              <div className=\"author\">\n                {author.name}\n                {' '}\n                &middot;\n                {' '}\n                {author.greeting}\n              </div>\n              <div className=\"date\">\n                {post.frontmatter.date}\n              </div>\n            </div>\n          </div>\n        </header>\n        <section\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          itemProp=\"articleBody\"\n        />\n        <div className=\"recruit\">\n          원프레딕트는 더 나은 제품을 고민하며 기술적인 문제를 함께 풀어낼\n          {' '}\n          <b>동료</b>를 찾고 있습니다.<br />\n          자세한 내용은\n          {' '}\n          <a\n            href=\"https://blog.onepredict.ai/\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >채용 사이트</a>를 참고해 주세요.\n        </div>\n      </article>\n      <nav className=\"blog-post-nav\">\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n      <div className={\"blog-post-footer\"}>\n        <Link\n          to=\"/\"\n          style={{\n            textDecorationLine: \"none\",\n            color: \"black\",\n          }}\n        >\n          <div className={\"blog-post-return\"}>목록으로 돌아가기</div>\n        </Link>\n      </div>\n    </Layout>\n  );\n};\n\nexport const Head = ({ data: { markdownRemark: post } }) => {\n  return (\n    <Seo\n      title={post.frontmatter.title}\n      description={post.frontmatter.description || post.excerpt}\n      slug={post.fields.slug}\n    />\n  );\n};\n\nexport default BlogPostTemplate;\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n        author {\n          name\n          avatar\n          greeting\n        }\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\n"],"names":["Head","_ref2","data","markdownRemark","post","React","Seo","title","frontmatter","description","excerpt","slug","fields","_ref","_site$siteMetadata","previous","next","site","location","siteTitle","siteMetadata","author","Layout","className","itemScope","itemType","itemProp","avatar","src","alt","name","greeting","date","dangerouslySetInnerHTML","__html","html","href","target","rel","style","display","flexWrap","justifyContent","listStyle","padding","Link","to","textDecorationLine","color"],"sourceRoot":""}